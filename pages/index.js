// import myVideo from 'public/potrait/dark/background.mp4';
import Head from 'next/head'
import dynamic from 'next/dynamic'
import _ from 'lodash';
// import { Tween, Timeline, ScrollTrigger, SplitChars } from 'react-gsap';
const HomeContainer = dynamic(() => import('components/home/homeContainer'))
// import HomeContainer from 'components/home/homeContainer';


export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeContainer />
    </>
  )
}
// const HomeContainer = () => {
//   const videoRef = useRef();
//   return (
//     <div className='home-container'>
//       <div className='section-1'>
//         <ScrollTrigger
//           trigger="trigger"
//           start="top center"
//           end="400px center"
//           scrub={0.5}
//           markers={true}
//           pin={true}
//           ref={videoRef}
//         >
//           <Timeline target={<BackgroundVideoComponent />}>
//             <Tween
//               from={{
//                 x: '-100vw',
//               }}
//               target="div1"
//             />
//             <Tween
//               from={{
//                 x: '-100vw',
//               }}
//               target="div3"
//             />
//             <Tween
//               from={{
//                 x: '-100vw',
//               }}
//               stagger={0.5}
//               target="div2"
//             />
//           </Timeline>
//         </ScrollTrigger>
//       </div>
//     </div>
//   );
// }

// const BackgroundVideoComponent = forwardRef((props, ref) => {
//   const div1 = useRef(null);
//   const div2 = useRef([]);
//   const div3 = useRef(null);
//   const trigger = useRef(null);
//   useImperativeHandle(ref, () => ({
//     div1,
//     div2,
//     div3,
//     trigger,
//   }));
//   return (
//     <div ref={trigger} style={{ textAlign: 'center' }}>
//       <h3 ref={div1}>THIS</h3>
//       <SplitChars
//         ref={(charRef) => div2.current.push(charRef)}
//         wrapper={<h3 style={{ display: 'inline-block' }} />}
//       >
//         TEST
//       </SplitChars>
//       <h3 ref={div3}>IS A</h3>
//     </div>
//   );
// });
